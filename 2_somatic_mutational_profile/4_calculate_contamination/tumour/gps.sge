#!/bin/bash
#
# Use Current working directory
#$ -cwd
#
# Join stdout and stderr
#$ -j n
#
# Run job through bash shell
#$ -S /bin/bash
#
# Your job name
#$ -N gps
#
# Send an email after the job has finished
#$ -m bes
#$ -M fer_talavera@comunidad.unam.mx
#$ -l vf=50G
#
#
# If modules are needed, source modules environment (Do not delete the next line):
. /etc/profile.d/modules.sh
#
# Add any modules you might require:
module load gcc/5.1.0
module load gatk/4.2.3.0
module load parallel
#
# Write your commands in the next line:
# Define reference and other fixed paths
vcf="/mnt/atgc-d1/drobles/ftalavera/vape_lung_cancer/reference/germline/FVB_NJ_snps_indels_combined_AF.vcf.gz"
interval="/mnt/atgc-d1/drobles/ftalavera/vape_lung_cancer/reference/agilent_bait/Allexon_v2_Covered_corrected.bed"
input_dir="/mnt/atgc-d1/drobles/ftalavera/vape_lung_cancer/data"
output_dir="/mnt/atgc-d1/drobles/ftalavera/vape_lung_cancer/2_somatic_mutational_profile/4_calculate_contamination/tumour"

# Create the output directory if it doesn't exist
mkdir -p "$output_dir"

# List of sample identifiers
samples=("MD6753a" "MD6754a" "MD6755a" "MD6756a" "MD6758a") 

# Define a function to process each sample
run_gps() {
    local sample="$1"
    local input="$input_dir/${sample}_clip.bam"
    local output="$output_dir/${sample}_getpileupsummaries.table"

    # Check if the input BAM file exists
    if [[ ! -f "$input" ]]; then
        echo "ERROR: Input file $input cannot be found."
        return 1
    fi

    # Run GATK GetPileupSummaries for the sample
    gatk GetPileupSummaries \
        -I "$input" \
        -V "$vcf" \
        -L "$interval" \
        -O "$output" 
    
    # Check if the output VCF was successfully created
    if [[ $? -ne 0 ]]; then
        echo "ERROR: GATK gps failed for sample $sample."
    else
        echo "Successfully processed sample $sample."
    fi
}

# Export variables and functions to be used by parallel
export -f run_gps
export input_dir
export output_dir
export vcf
export interval

# Run in parallel
parallel run_gps ::: "${samples[@]}"
